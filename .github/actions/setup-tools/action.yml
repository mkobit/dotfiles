name: 'Setup Development Tools'
description: 'Install and cache development tools for Ubuntu and macOS'

inputs:
  os:
    description: 'Operating system (ubuntu-24.04, macos-15)'
    required: true
  cache-version:
    description: 'Cache version for invalidating caches'
    required: true
    default: 'v2'

outputs:
  cache-hit:
    description: 'Whether tools were restored from cache'
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Set tool paths
      shell: bash
      run: |
        case "${{ inputs.os }}" in
          "ubuntu-24.04")
            echo "TOOL_CACHE_PATH=/home/runner/.cache/tools" >> $GITHUB_ENV
            echo "HOMEBREW_CACHE_PATH=/home/linuxbrew/.linuxbrew" >> $GITHUB_ENV
            ;;
          "macos-15")
            echo "TOOL_CACHE_PATH=/Users/runner/.cache/tools" >> $GITHUB_ENV
            echo "HOMEBREW_CACHE_PATH=/opt/homebrew" >> $GITHUB_ENV
            ;;
          *)
            echo "::error::Unsupported operating system: ${{ inputs.os }}"
            exit 1
            ;;
        esac

    - name: Cache tools
      id: cache
      uses: actions/cache@v4  # Latest v4 cache action
      with:
        path: |
          ${{ env.TOOL_CACHE_PATH }}
          ${{ env.HOMEBREW_CACHE_PATH }}
        key: tools-${{ inputs.os }}-${{ inputs.cache-version }}-${{ hashFiles('**/BUILD', '**/*.bzl', 'WORKSPACE*', 'MODULE.bazel') }}
        restore-keys: |
          tools-${{ inputs.os }}-${{ inputs.cache-version }}-
          tools-${{ inputs.os }}-

    - name: Create cache directories
      shell: bash
      run: |
        mkdir -p "${{ env.TOOL_CACHE_PATH }}"
        mkdir -p "${HOMEBREW_CACHE_PATH}"

    - name: Install tools (Ubuntu)
      if: inputs.os == 'ubuntu-24.04' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        # Update package lists
        sudo apt-get update

        # Install build essentials and common tools
        sudo apt-get install -y \
          build-essential \
          curl \
          git \
          unzip \
          wget \
          software-properties-common \
          apt-transport-https \
          ca-certificates \
          gnupg \
          lsb-release

        # Install Homebrew for Linux (pinned to specific commit)
        HOMEBREW_INSTALL_SHA="f45fcfb55fb4da96ff39de2da4d8a1134a83e8b7"
        curl -fsSL "https://raw.githubusercontent.com/Homebrew/install/${HOMEBREW_INSTALL_SHA}/install.sh" | bash

        # Add Homebrew to PATH
        echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH
        echo "/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH

    - name: Install tools (macOS)
      if: inputs.os == 'macos-15' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        # Homebrew should already be installed on macOS runners
        # Update Homebrew to latest stable version
        brew update

        # Install common development tools
        brew install \
          coreutils \
          findutils \
          gnu-tar \
          gnu-which \
          gzip \
          make \
          wget

    - name: Install common tools via Homebrew
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        # Add Homebrew to PATH for both platforms
        if [[ "${{ inputs.os }}" == "ubuntu-24.04" ]]; then
          export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
        fi

        # Install common tools with pinned versions where possible
        brew install \
          jq \
          yq \
          shellcheck \
          tree

    - name: Verify installations
      shell: bash
      run: |
        echo "=== Tool Verification ==="

        # Add Homebrew to PATH
        if [[ "${{ inputs.os }}" == "ubuntu-24.04" ]]; then
          export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
        fi

        # Check essential tools
        echo "Git: $(git --version)"
        echo "Make: $(make --version | head -n1)"
        echo "Curl: $(curl --version | head -n1)"
        echo "JQ: $(jq --version)"
        echo "YQ: $(yq --version)"
        echo "ShellCheck: $(shellcheck --version | head -n1)"
        echo "Tree: $(tree --version | head -n1)"

        # Platform-specific checks
        case "${{ inputs.os }}" in
          "ubuntu-24.04")
            echo "Build Essential: $(gcc --version | head -n1)"
            echo "Homebrew (Linux): $(brew --version | head -n1)"
            ;;
          "macos-15")
            echo "Clang: $(clang --version | head -n1)"
            echo "Homebrew: $(brew --version | head -n1)"
            ;;
        esac
