name: 'Setup Development Tools'
description: 'Install and cache development tools for Ubuntu and macOS'

inputs:
  os:
    description: 'Operating system (ubuntu-24.04, macos-15)'
    required: true
  cache-version:
    description: 'Cache version for invalidating caches'
    required: true
    default: 'v2'

outputs:
  cache-hit:
    description: 'Whether tools were restored from cache'
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Set tool paths
      shell: bash
      run: |
        case "${{ inputs.os }}" in
          "ubuntu-24.04")
            echo "TOOL_CACHE_PATH=/home/runner/.cache/tools" >> $GITHUB_ENV
            echo "HOMEBREW_CACHE_PATH=/home/linuxbrew/.linuxbrew" >> $GITHUB_ENV
            ;;
          "macos-15")
            echo "TOOL_CACHE_PATH=/Users/runner/.cache/tools" >> $GITHUB_ENV
            echo "HOMEBREW_CACHE_PATH=/opt/homebrew" >> $GITHUB_ENV
            ;;
          *)
            echo "::error::Unsupported operating system: ${{ inputs.os }}"
            exit 1
            ;;
        esac

    - name: Cache tools
      id: cache
      uses: actions/cache@v4  # Latest v4 cache action
      with:
        path: |
          ${{ env.TOOL_CACHE_PATH }}
          ${{ env.HOMEBREW_CACHE_PATH }}
        key: tools-${{ inputs.os }}-${{ inputs.cache-version }}-${{ hashFiles('**/BUILD', '**/*.bzl', 'WORKSPACE*', 'MODULE.bazel') }}
        restore-keys: |
          tools-${{ inputs.os }}-${{ inputs.cache-version }}-
          tools-${{ inputs.os }}-

    - name: Create cache directories
      shell: bash
      run: |
        mkdir -p "${{ env.TOOL_CACHE_PATH }}"
        # Don't create Homebrew directory - let the installer handle it

    - name: Install tools (Ubuntu)
      if: inputs.os == 'ubuntu-24.04' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        set -euo pipefail

        echo "=== Installing Ubuntu Development Tools ==="

        # Update package lists
        sudo apt-get update -qq

        # Install build essentials and common tools
        sudo apt-get install -qq -y \
          build-essential \
          curl \
          git \
          unzip \
          wget \
          software-properties-common \
          apt-transport-https \
          ca-certificates \
          gnupg \
          lsb-release

        # Check if Homebrew is already installed
        if ! command -v brew &> /dev/null; then
          echo "Installing Homebrew for Linux..."
          # Use the official Homebrew installer with non-interactive mode
          NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

          # Add Homebrew to PATH for current session
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

          # Add to GitHub PATH for subsequent steps
          echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH
          echo "/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH
        else
          echo "Homebrew already installed"
        fi

    - name: Install tools (macOS)
      if: inputs.os == 'macos-15' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        set -euo pipefail

        echo "=== Installing macOS Development Tools ==="

        # Homebrew should already be installed on macOS runners
        # Update Homebrew to latest stable version
        brew update

        # Install common development tools
        brew install \
          coreutils \
          findutils \
          gnu-tar \
          gnu-which \
          gzip

    - name: Install common tools via Homebrew
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        set -euo pipefail

        echo "=== Installing Common Tools via Homebrew ==="

        # Add Homebrew to PATH for Ubuntu
        if [[ "${{ inputs.os }}" == "ubuntu-24.04" ]]; then
          if [[ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]]; then
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          else
            echo "::error::Homebrew not found after installation"
            exit 1
          fi
        fi

        # Verify brew is available
        if ! command -v brew &> /dev/null; then
          echo "::error::brew command not found in PATH"
          echo "PATH: $PATH"
          exit 1
        fi

        # Install common tools
        echo "Installing jq..."
        brew install jq

        echo "Installing yq..."
        brew install yq

        echo "Installing shellcheck..."
        brew install shellcheck

        echo "Installing tree..."
        brew install tree

    - name: Verify installations
      shell: bash
      run: |
        set -euo pipefail

        echo "=== Tool Verification ==="

        # Add Homebrew to PATH for Ubuntu
        if [[ "${{ inputs.os }}" == "ubuntu-24.04" ]]; then
          if [[ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]]; then
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          fi
        fi

        # Check essential tools
        echo "Git: $(git --version || echo 'NOT FOUND')"
        echo "Curl: $(curl --version | head -n1 || echo 'NOT FOUND')"

        # Check Homebrew tools (may not be available if cache hit)
        echo "JQ: $(jq --version 2>/dev/null || echo 'NOT FOUND')"
        echo "YQ: $(yq --version 2>/dev/null || echo 'NOT FOUND')"
        echo "ShellCheck: $(shellcheck --version 2>/dev/null | head -n1 || echo 'NOT FOUND')"
        echo "Tree: $(tree --version 2>/dev/null | head -n1 || echo 'NOT FOUND')"

        # Platform-specific checks
        case "${{ inputs.os }}" in
          "ubuntu-24.04")
            echo "Build Essential: $(gcc --version | head -n1 || echo 'NOT FOUND')"
            echo "Homebrew (Linux): $(brew --version | head -n1 || echo 'NOT FOUND')"
            ;;
          "macos-15")
            echo "Clang: $(clang --version | head -n1 || echo 'NOT FOUND')"
            echo "Homebrew: $(brew --version | head -n1 || echo 'NOT FOUND')"
            ;;
        esac

        echo "=== PATH ==="
        echo "$PATH"
