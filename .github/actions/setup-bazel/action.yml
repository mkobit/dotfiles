name: 'Setup Bazel'
description: 'Install and configure Bazel with optimized caching'

inputs:
  cache-key:
    description: 'Cache key for Bazel artifacts'
    required: true
  cache-version:
    description: 'Cache version for invalidating Bazel caches'
    required: true
    default: 'v2'

outputs:
  cache-hit:
    description: 'Whether Bazel cache was restored'
    value: ${{ steps.bazel-cache.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Setup Bazel
      uses: bazel-contrib/setup-bazel@e8776f58fb6a6e9055cbaf1b38c52ccc5247e9c4 # v0.8.1
      with:
        bazelisk-cache: true
        disk-cache: ${{ github.workspace }}/.bazel-cache
        repository-cache: ${{ github.workspace }}/.bazel-repository-cache

    - name: Cache Bazel outputs
      id: bazel-cache
      uses: actions/cache@v4  # Latest v4 cache action
      with:
        path: |
          ~/.cache/bazel
          ~/.cache/bazelisk
          ${{ github.workspace }}/.bazel-cache
          ${{ github.workspace }}/.bazel-repository-cache
        key: bazel-${{ inputs.cache-key }}-${{ inputs.cache-version }}-${{ hashFiles('**/BUILD', '**/*.bzl', 'WORKSPACE*', 'MODULE.bazel') }}
        restore-keys: |
          bazel-${{ inputs.cache-key }}-${{ inputs.cache-version }}-
          bazel-${{ inputs.cache-key }}-

    - name: Configure Bazel
      shell: bash
      run: |
        # Create .bazelrc.local for CI-specific optimizations
        cat > .bazelrc.local << 'EOF'
        # CI-specific optimizations
        common --show_timestamps
        common --color=yes

        # Memory optimizations for CI
        startup --host_jvm_args=-Xmx2g
        common --jobs=auto
        common --loading_phase_threads=auto

        # Cache optimizations
        build --disk_cache=${{ github.workspace }}/.bazel-cache
        build --repository_cache=${{ github.workspace }}/.bazel-repository-cache

        # Performance settings
        build --experimental_reuse_sandbox_directories
        build --experimental_guard_against_concurrent_changes
        build --spawn_strategy=standalone

        # Progress reporting
        test --test_output=errors
        test --test_summary=detailed
        EOF

    - name: Set Bazel environment variables
      shell: bash
      run: |
        cat >> $GITHUB_ENV << 'EOF'
        BAZEL_STARTUP_OPTS=--host_jvm_args=-Xmx2g
        BAZEL_BUILD_OPTS=--jobs=auto --loading_phase_threads=auto --experimental_reuse_sandbox_directories
        BAZEL_TEST_OPTS=--test_output=errors --test_summary=detailed
        EOF

    - name: Warm up Bazel
      shell: bash
      run: |
        echo "=== Warming up Bazel ==="
        bazel version
        bazel info
        echo "Build workspace: $(bazel info workspace)"
        echo "Output base: $(bazel info output_base)"
