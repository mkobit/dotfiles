name: Devcontainer lockfile validation

on:
  pull_request:
    paths:
      - '.devcontainer/**'
  push:
    branches: [ main ]
    paths:
      - '.devcontainer/**'

jobs:
  validate-lockfile:
    runs-on: ubuntu-latest
    name: Validate devcontainer lockfile
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Check lockfile exists
        run: |
          if [ ! -f ".devcontainer/devcontainer-lock.json" ]; then
            echo "::error::devcontainer-lock.json is missing - run: devcontainer build --workspace-folder . to generate"
            exit 1
          fi
          
      - name: Validate lockfile format
        run: |
          # Basic JSON validation
          python3 -m json.tool .devcontainer/devcontainer-lock.json > /dev/null
          
          # Check required fields exist
          jq -e '.features' .devcontainer/devcontainer-lock.json > /dev/null
          
          # Verify all features from devcontainer.json are locked
          devcontainer_features=$(jq -r '.features | keys[]' .devcontainer/devcontainer.json 2>/dev/null || echo "")
          lockfile_features=$(jq -r '.features | keys[]' .devcontainer/devcontainer-lock.json)
          
          for feature in $devcontainer_features; do
            if ! echo "$lockfile_features" | grep -q "^$feature\$"; then
              echo "::error::Feature $feature is missing from lockfile"
              exit 1
            fi
          done
          
      - name: Check for placeholder values
        run: |
          if grep -q "TBD" .devcontainer/devcontainer-lock.json; then
            echo "::warning::Lockfile contains placeholder values - regenerate with proper checksums"
          fi
          
      - name: Build devcontainer to verify lockfile
        uses: devcontainers/ci@v0.3
        with:
          imageName: devcontainer-test
          runCmd: echo "Devcontainer built successfully with lockfile"