name: Bazel Build and Test

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.adoc'
      - '.goosehints'
      - '.gitattributes'
      - '.gitignore'
      - '.editorconfig'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.adoc'
      - '.goosehints'
      - '.gitattributes'
      - '.gitignore'
      - '.editorconfig'

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: bazel-contrib/setup-bazel@e8776f58fb6a6e9055cbaf1b38c52ccc5247e9c4 # v0.8.1
      - name: Run format checks
        run: bazel test //:format_test
      - name: Generate LSP config
        run: |
          bazel run //:lsp_setup
          bazel run //:compile_commands

  test:
    needs: [lint]
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-15]
        profile: [personal, work]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: bazel-contrib/setup-bazel@e8776f58fb6a6e9055cbaf1b38c52ccc5247e9c4 # v0.8.1

      - name: Build and test
        run: |
          echo "=== Building all packages ==="
          bazel build //... --//config:profile=${{ matrix.profile }}

          echo "=== Running all tests ==="
          bazel test //... --//config:profile=${{ matrix.profile }}

  summary:
    if: always()
    needs: [lint, test]
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - name: Report results
        run: |
          echo "=== Test Summary ==="
          echo "Lint: ${{ needs.lint.result }}"
          echo "Test: ${{ needs.test.result }}"

          if [[ "${{ needs.lint.result }}" == "failure" || "${{ needs.test.result }}" == "failure" ]]; then
            echo "❌ Critical jobs failed"
            exit 1
          else
            echo "✅ All tests completed successfully"
          fi
