load("//rules:guarded_install.bzl", "guarded_install")
load("//rules/git:defs.bzl", "git_config", "git_test")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "base_configs",
    srcs = glob(["configs/base/*.gitconfig"]),
)

filegroup(
    name = "personal_configs",
    srcs = glob(["configs/personal/*.gitconfig"]),
)

filegroup(
    name = "work_configs",
    srcs = glob(["configs/work/*.gitconfig"]),
)

git_config(
    name = "base_gitconfig",
    srcs = [":base_configs"],
    header = "# Base Git configuration",
)

git_config(
    name = "personal_gitconfig",
    srcs = [
        ":base_configs",
        ":personal_configs",
    ],
    header = "# Personal Git configuration",
)

git_config(
    name = "work_gitconfig",
    srcs = [
        ":base_configs",
        ":work_configs",
    ],
    header = "# Work Git configuration",
)

git_config(
    name = "gitconfig",
    srcs = select({
        "//config:work": [":work_gitconfig"],
        "//config:personal": [":personal_gitconfig"],
        "//conditions:default": [":base_gitconfig"],
    }),
    header = "# THIS FILE IS GENERATED - DO NOT EDIT DIRECTLY",
)

git_test(
    name = "base_gitconfig_test",
    config = ":base_gitconfig",
)

git_test(
    name = "personal_gitconfig_test",
    config = ":personal_gitconfig",
)

git_test(
    name = "work_gitconfig_test",
    config = ":work_gitconfig",
)

git_test(
    name = "selected_gitconfig_test",
    config = ":gitconfig",
)

# Repository-wide formatting is handled at the root level

# Install generated gitconfig into ~/.gitconfig
guarded_install(
    name = "install_gitconfig_in_home",
    srcs = [":gitconfig"],
    content = "[include]\n\tpath = $$BUILD_WORKSPACE_DIRECTORY/$(execpath :gitconfig)",
    guard_id = "dotfiles:git",
    guard_prefix = "#",
    target_file = "~/.gitconfig",
)
