package(default_visibility = ["//visibility:public"])

# Create a tmux-powerline installation target
genrule(
    name = "tmux_powerline_install",
    outs = ["tmux-powerline"],
    cmd = """
# Create a wrapper script that sets up the environment
cat > $@ << 'EOF'
#!/bin/bash
# Tmux-powerline wrapper
POWERLINE_ROOT="$$BUILD_WORKSPACE_DIRECTORY/external/tmux_powerline"
export TMUX_POWERLINE_DIR_HOME="$$POWERLINE_ROOT"
exec "$$POWERLINE_ROOT/tmux-powerline.sh" "$$@"
EOF
chmod +x $@
    """,
    executable = True,
)

# Configuration for tmux-powerline
genrule(
    name = "powerline_config",
    outs = ["config.sh"],
    cmd = """
cat > $@ << 'EOF'
# tmux-powerline configuration
# Generated by Bazel - customize as needed

# General settings
export TMUX_POWERLINE_SEPARATOR_LEFT_BOLD="⮂"
export TMUX_POWERLINE_SEPARATOR_LEFT_THIN="⮃"
export TMUX_POWERLINE_SEPARATOR_RIGHT_BOLD="⮀"
export TMUX_POWERLINE_SEPARATOR_RIGHT_THIN="⮁"

# Segments to show
export TMUX_POWERLINE_LEFT_STATUS_SEGMENTS="tmux_session_info hostname"
export TMUX_POWERLINE_RIGHT_STATUS_SEGMENTS="battery date_day time"

# Colors
export TMUX_POWERLINE_DEFAULT_BACKGROUND_COLOR='235'
export TMUX_POWERLINE_DEFAULT_FOREGROUND_COLOR='255'
EOF
    """,
)

# tmux configuration snippet that uses powerline
genrule(
    name = "tmux_powerline_config",
    srcs = [
        ":powerline_config",
        ":tmux_powerline_install",
    ],
    outs = ["powerline.tmux"],
    cmd = """
cat > $@ << 'EOF'
# tmux-powerline integration
# Source the powerline configuration
run-shell "$$BUILD_WORKSPACE_DIRECTORY/$(execpath :powerline_config)"

# Set status bar to use powerline
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#($$BUILD_WORKSPACE_DIRECTORY/$(execpath :tmux_powerline_install) left)"
set-option -g status-right "#($$BUILD_WORKSPACE_DIRECTORY/$(execpath :tmux_powerline_install) right)"
EOF
    """,
)
