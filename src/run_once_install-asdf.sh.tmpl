#!/bin/bash
# vim: set ft=sh
{{- /* Calculate hash from sorted JSON of plugins array for change detection */ -}}
{{- $pluginsJson := .asdf.plugins | sortAlpha | toJson -}}
{{- $pluginsHash := $pluginsJson | sha256sum -}}
# run_once_install-asdf-{{ $pluginsHash }}.sh.tmpl
#
# Configures asdf plugins and installs tools defined in .tool-versions.
# The asdf binary is installed to ~/.local/bin via chezmoi externals.
# This script re-runs when the plugins array changes (tracked via JSON hash).
#
# Script logic:
# 1. Check if asdf is enabled in chezmoi data.
# 2. Verify asdf binary is available.
# 3. Sync plugins: install missing, remove unlisted.
# 4. Install all tool versions from ~/.tool-versions.
#
# References:
# - https://asdf-vm.com/guide/getting-started.html

set -euo pipefail

{{- if .asdf.enabled }}

# --- Verify asdf is accessible ---
if ! command -v asdf >/dev/null 2>&1; then
  echo "Error: asdf binary not found in PATH"
  echo "Expected location: ~/.local/bin/asdf (installed via chezmoi externals)"
  exit 1
fi

echo "asdf version: $(asdf version)"

# Define desired plugins from chezmoi data
declare -a DESIRED_PLUGINS=(
{{- range .asdf.plugins }}
  "{{ .name }}"
{{- end }}
)

# --- Remove Unlisted Plugins ---
echo "Checking for plugins to remove..."
while IFS= read -r installed_plugin; do
  found=false
  for desired_plugin in "${DESIRED_PLUGINS[@]}"; do
    if [[ "$installed_plugin" == "$desired_plugin" ]]; then
      found=true
      break
    fi
  done
  if [[ "$found" == false ]]; then
    echo "Removing unlisted plugin: $installed_plugin"
    asdf plugin remove "$installed_plugin"
  fi
done < <(asdf plugin list 2>/dev/null || true)

# --- Install Missing Plugins ---
echo "Checking for plugins to install..."
{{- range .asdf.plugins }}
if ! asdf plugin list | grep -qF "{{ .name }}"; then
  echo "Installing asdf plugin: {{ .name }}"
  asdf plugin add {{ .name }} {{ with .git_url }}{{ . }}{{ end }}
fi
{{- end }}

# --- Install Tools ---
echo "Installing tool versions from ~/.tool-versions..."
if [ -f "${HOME}/.tool-versions" ]; then
  asdf install
  echo "Tool installation complete."
else
  echo "Warning: ~/.tool-versions file not found. Skipping tool installation."
fi

{{- end }}