# Tmux configuration
# Simplified to use basic genrules without toolchains

load("//modules/rules:simpledotfile.bzl", "simple_dotfile", "simple_dotfile_group")

package(default_visibility = ["//visibility:public"])

# Generate tmux configuration
genrule(
    name = "tmux_conf_generated",
    srcs = [
        "configs/tmux_base.conf",
    ],
    outs = ["tmux.conf"],
    cmd = """
echo "# Basic tmux configuration" > $@
echo "# Generated by Bazel" >> $@
echo "" >> $@
cat $(location configs/tmux_base.conf) >> $@
echo "" >> $@
echo "# Generated at $$(date)" >> $@
""",
)

# Create the dotfile rule for tmux
simple_dotfile(
    name = "tmux_conf_dotfile",
    src = ":tmux_conf_generated",
    dest = "~/.tmux.conf",
)

# Group all tmux dotfiles
simple_dotfile_group(
    name = "tmux_dotfiles",
    deps = [
        ":tmux_conf_dotfile",
    ],
)

# macOS specific configuration
genrule(
    name = "tmux_conf_macos",
    srcs = [
        "configs/macos_specific.tmux",
        "//modules/tmux:tmux.conf",
    ],
    outs = ["tmux_macos.conf"],
    cmd = """
cat $(location //modules/tmux:tmux.conf) > $@
echo "" >> $@
echo "# =============================================" >> $@
echo "# macOS-specific configuration" >> $@
echo "# =============================================" >> $@
cat $(location configs/macos_specific.tmux) >> $@
echo "# Generated at $$(date) for macOS" >> $@
""",
)

# Linux specific configuration
genrule(
    name = "tmux_conf_linux",
    srcs = [
        "configs/linux_specific.tmux",
        "//modules/tmux:tmux.conf",
    ],
    outs = ["tmux_linux.conf"],
    cmd = """
cat $(location //modules/tmux:tmux.conf) > $@
echo "" >> $@
echo "# =============================================" >> $@
echo "# Linux-specific configuration" >> $@
echo "# =============================================" >> $@
cat $(location configs/linux_specific.tmux) >> $@
echo "# Generated at $$(date) for Linux" >> $@
""",
)

# WSL specific configuration
genrule(
    name = "tmux_conf_wsl",
    srcs = [
        "configs/wsl_specific.tmux",
        "//modules/tmux:tmux.conf",
    ],
    outs = ["tmux_wsl.conf"],
    cmd = """
cat $(location //modules/tmux:tmux.conf) > $@
echo "" >> $@
echo "# =============================================" >> $@
echo "# WSL-specific configuration" >> $@
echo "# =============================================" >> $@
cat $(location configs/wsl_specific.tmux) >> $@
echo "# Generated at $$(date) for WSL" >> $@
""",
)

# Windows specific configuration
genrule(
    name = "tmux_conf_windows",
    srcs = [
        "configs/windows_specific.tmux",
        "//modules/tmux:tmux.conf",
    ],
    outs = ["tmux_windows.conf"],
    cmd = """
cat $(location //modules/tmux:tmux.conf) > $@
echo "" >> $@
echo "# =============================================" >> $@
echo "# Windows-specific configuration" >> $@
echo "# =============================================" >> $@
cat $(location configs/windows_specific.tmux) >> $@
echo "# Generated at $$(date) for Windows" >> $@
""",
)

# Generic fallback configuration
genrule(
    name = "tmux_conf_generic",
    srcs = [
        "configs/generic.tmux",
        "//modules/tmux:tmux.conf",
    ],
    outs = ["tmux_generic.conf"],
    cmd = """
cat $(location //modules/tmux:tmux.conf) > $@
echo "" >> $@
echo "# =============================================" >> $@
echo "# Generic platform configuration" >> $@
echo "# =============================================" >> $@
cat $(location configs/generic.tmux) >> $@
echo "# Generated at $$(date) for generic platform" >> $@
""",
)

# Combined tmux configuration - using select() for different platforms
alias(
    name = "tmux_conf_combined",
    actual = select({
        "//selectors:macos": ":tmux_conf_macos",
        "//selectors:linux": ":tmux_conf_linux",
        "//selectors:windows": ":tmux_conf_windows",
        "//selectors:wsl": ":tmux_conf_wsl",
        "//conditions:default": ":tmux_conf_generic",
    }),
)

simple_dotfile(
    name = "tmux_conf_combined_dotfile",
    src = ":tmux_conf_combined",
    dest = "~/.tmux.conf.combined",
)

# Create a combined tmux configuration that includes version-based configs
genrule(
    name = "tmux_conf_unified",
    srcs = [
        ":tmux_conf_combined",
        ":tmux_conf_generated",
    ],
    outs = ["tmux_unified.conf"],
    cmd = """
echo "# ===================================================" > $@
echo "# Unified tmux configuration with platform detection" >> $@
echo "# ===================================================" >> $@
echo "" >> $@
echo "# Platform-specific configuration" >> $@
cat $(location :tmux_conf_combined) >> $@
echo "" >> $@
echo "# ===================================================" >> $@
echo "# Basic configuration" >> $@
echo "# ===================================================" >> $@
grep -v "^# Generated at" $(location :tmux_conf_generated) >> $@
echo "" >> $@
echo "# Generated at $$(date)" >> $@
""",
)

simple_dotfile(
    name = "tmux_conf_unified_dotfile", 
    src = ":tmux_conf_unified",
    dest = "~/.tmux.conf.unified",
)

# Work variant combined configuration
genrule(
    name = "tmux_conf_combined_work",
    srcs = [
        ":tmux_conf_combined",
        "configs/work_variant.tmux",
    ],
    outs = ["tmux_combined_work.conf"],
    cmd = """
cat $(location :tmux_conf_combined) > $@
echo "" >> $@
echo "# =============================================" >> $@
echo "# Work variant specific configuration" >> $@
echo "# =============================================" >> $@
cat $(location configs/work_variant.tmux) >> $@
echo "" >> $@
echo "# Generated for work variant at $$(date)" >> $@
""",
)

simple_dotfile(
    name = "tmux_conf_combined_work_dotfile",
    src = ":tmux_conf_combined_work",
    dest = "~/.tmux.conf.work",
)

# Personal variant combined configuration
genrule(
    name = "tmux_conf_combined_personal",
    srcs = [
        ":tmux_conf_combined",
        "configs/personal_variant.tmux",
    ],
    outs = ["tmux_combined_personal.conf"],
    cmd = """
cat $(location :tmux_conf_combined) > $@
echo "" >> $@
echo "# =============================================" >> $@
echo "# Personal variant specific configuration" >> $@
echo "# =============================================" >> $@
cat $(location configs/personal_variant.tmux) >> $@
echo "" >> $@
echo "# Generated for personal variant at $$(date)" >> $@
""",
)

simple_dotfile(
    name = "tmux_conf_combined_personal_dotfile",
    src = ":tmux_conf_combined_personal",
    dest = "~/.tmux.conf.personal",
)

# Group for all combined tmux configurations
simple_dotfile_group(
    name = "tmux_combined_dotfiles",
    deps = [
        ":tmux_conf_combined_dotfile",
        ":tmux_conf_combined_work_dotfile",
        ":tmux_conf_combined_personal_dotfile",
        ":tmux_conf_unified_dotfile",
    ],
)

# Target to print all available tmux configurations
genrule(
    name = "print_all_configs",
    srcs = [
        ":tmux_conf_generated",
        ":tmux_conf_macos",
        ":tmux_conf_linux",
        ":tmux_conf_windows",
        ":tmux_conf_wsl", 
        ":tmux_conf_generic",
        ":tmux_conf_unified",
        ":tmux_conf_combined_work",
        ":tmux_conf_combined_personal",
    ],
    outs = ["available_tmux_configs.txt"],
    cmd = """
echo "============================================================" > $@
echo "Available tmux configurations (generated by Bazel)" >> $@
echo "============================================================" >> $@
echo "" >> $@

# List all config files
echo "Base configuration:" >> $@
echo "  $(location :tmux_conf_generated)" >> $@
echo "" >> $@

echo "Platform-specific configurations:" >> $@
echo "  macOS: $(location :tmux_conf_macos)" >> $@
echo "  Linux: $(location :tmux_conf_linux)" >> $@
echo "  Windows: $(location :tmux_conf_windows)" >> $@
echo "  WSL: $(location :tmux_conf_wsl)" >> $@
echo "  Generic: $(location :tmux_conf_generic)" >> $@
echo "" >> $@

echo "Unified configuration (platform detection):" >> $@
echo "  $(location :tmux_conf_unified)" >> $@
echo "" >> $@

echo "Variant configurations:" >> $@
echo "  Work: $(location :tmux_conf_combined_work)" >> $@
echo "  Personal: $(location :tmux_conf_combined_personal)" >> $@
echo "" >> $@

echo "Generated: $$(date)" >> $@
""",
    visibility = ["//visibility:public"],
)