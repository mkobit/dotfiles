load("//modules/rules:simpledotfile.bzl", "simple_dotfile", "simple_dotfile_group")
load("//tools:defs.bzl", "template_file")

package(default_visibility = ["//visibility:public"])

# Base VSCode configuration files
filegroup(
    name = "vscode_configs",
    srcs = glob(["configs/*.json"]),
)

# Generate the VSCode configuration with template_file
template_file(
    name = "vscode_conf_generated",
    src = "settings.json.tpl",
    out = "settings.json",
)

# Create a configuration for standard user settings
simple_dotfile(
    name = "vscode_user_settings",
    src = ":vscode_conf_generated",
    dest = "~/.vscode/settings.json",
)

# Create a workspace-specific configuration
simple_dotfile(
    name = "vscode_workspace_settings",
    src = ":vscode_conf_generated",
    dest = ".vscode/settings.json",
)

# Platform-specific VSCode configurations
template_file(
    name = "vscode_macos_conf",
    src = "settings.json.tpl",
    out = "macos_settings.json",
    substitutions = {
        "%%PLATFORM%%": "macos",
    },
)

template_file(
    name = "vscode_linux_conf",
    src = "settings.json.tpl",
    out = "linux_settings.json",
    substitutions = {
        "%%PLATFORM%%": "linux", 
    },
)

template_file(
    name = "vscode_windows_conf",
    src = "settings.json.tpl",
    out = "windows_settings.json",
    substitutions = {
        "%%PLATFORM%%": "windows",
    },
)

# Platform-specific VSCode configurations using select()
filegroup(
    name = "vscode_platform_specific",
    srcs = select({
        "//selectors:macos": [":vscode_macos_conf"],
        "//selectors:linux": [":vscode_linux_conf"],
        "//selectors:windows": [":vscode_windows_conf"],
        "//conditions:default": [":vscode_conf_generated"],
    }),
)

# Create platform-specific user settings for each platform
simple_dotfile(
    name = "vscode_macos_settings",
    src = ":vscode_macos_conf",
    dest = "~/.vscode/settings.json",
)

simple_dotfile(
    name = "vscode_linux_settings",
    src = ":vscode_linux_conf",
    dest = "~/.vscode/settings.json",
)

simple_dotfile(
    name = "vscode_windows_settings", 
    src = ":vscode_windows_conf",
    dest = "~/.vscode/settings.json",
)

# Use a filegroup with select() to choose the right one
filegroup(
    name = "vscode_platform_settings",
    srcs = select({
        "//selectors:macos": [":vscode_macos_settings"],
        "//selectors:linux": [":vscode_linux_settings"],
        "//selectors:windows": [":vscode_windows_settings"],
        "//conditions:default": [":vscode_user_settings"],
    }),
)

# Detection script for VSCode
genrule(
    name = "detect", 
    outs = ["vscode_detection.json"],
    cmd = """
echo '{' > $@
echo '    "detected": false,' >> $@
echo '    "version": "not detected",' >> $@
echo '    "platform": "unknown",' >> $@
echo '    "locations": []' >> $@
echo '}' >> $@
echo "VSCode detection simplified to always return false" >&2
""",
)

# Generate info about the detection process
genrule(
    name = "detection_info",
    outs = ["detection_info.txt"],
    cmd = """
echo 'VSCode Detection' > $@ 
echo '================' >> $@
echo '' >> $@
echo 'VSCode detection simplified in this version' >> $@
echo 'VSCode configurations are always available' >> $@
echo '' >> $@
echo 'To use VSCode-specific configurations, run:' >> $@
echo '  bazel run //tools/vscode:vscode_platform_settings_print' >> $@
""",
)

# Group for VSCode dotfiles
simple_dotfile_group(
    name = "vscode_dotfiles", 
    deps = [
        ":vscode_user_settings",
        ":vscode_platform_settings",
    ],
)