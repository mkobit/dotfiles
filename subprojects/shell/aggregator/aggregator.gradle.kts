import dotfilesbuild.io.file.EditFile
import dotfilesbuild.io.file.content.SetContent

plugins {
  id("dotfilesbuild.dotfiles-lifecycle")
  id("dotfilesbuild.io.noop")
}

val bin by configurations.creating {
  isCanBeConsumed = false
  isCanBeResolved = true
  attributes {
    attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage::class, "bin"))
  }
}

dependencies {
  bin(projects.shell.diffHighlight)
  bin(projects.shell.takeNote)
  bin(projects.programs.jq)
  bin(projects.programs.keepass)
  bin(projects.programs.kubectl)
}

tasks {
  val sourcedFiles = layout.projectDirectory.dir("sourced-files")
  val generatePathZshrcFile by registering(EditFile::class) {
    inputs.files(bin).withPropertyName("bin directories")
    inputs.files(sourcedFiles).withPropertyName("sourced files")
    description = "Generates a ZSH file than be sourced to expand the path to include "
    file.set(layout.buildDirectory.file("zsh/dotfiles_zsh"))
    editActions.set(
      listOf(
        SetContent {
          """
            #!/usr/bin/env bash
            # generated by Gradle
            ${bin.resolve().sorted().joinToString(separator = System.lineSeparator()) { """export PATH="${'$'}{PATH}:$it""" }}
          """.trimIndent()
        }
      )
    )
  }

  dotfiles {
    dependsOn(generatePathZshrcFile)
  }
}
